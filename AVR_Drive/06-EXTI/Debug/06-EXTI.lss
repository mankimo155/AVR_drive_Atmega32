
06-EXTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000d20  00000000  00000000  00000924  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000009c9  00000000  00000000  00001644  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 22 04 	jmp	0x844	; 0x844 <__vector_1>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4e 04 	call	0x89c	; 0x89c <main>
  64:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <MGIE_vEnableGlobalInterrupt>:

#include "GIE_int.h"


void MGIE_vEnableGlobalInterrupt(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG, 7);
  74:	af e5       	ldi	r26, 0x5F	; 95
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ef e5       	ldi	r30, 0x5F	; 95
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	80 68       	ori	r24, 0x80	; 128
  80:	8c 93       	st	X, r24
}
  82:	cf 91       	pop	r28
  84:	df 91       	pop	r29
  86:	08 95       	ret

00000088 <MGIE_vDisableGlobalInterrupt>:

void MGIE_vDisableGlobalInterrupt(void)
{
  88:	df 93       	push	r29
  8a:	cf 93       	push	r28
  8c:	cd b7       	in	r28, 0x3d	; 61
  8e:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG, 7);
  90:	af e5       	ldi	r26, 0x5F	; 95
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	ef e5       	ldi	r30, 0x5F	; 95
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	8f 77       	andi	r24, 0x7F	; 127
  9c:	8c 93       	st	X, r24
}
  9e:	cf 91       	pop	r28
  a0:	df 91       	pop	r29
  a2:	08 95       	ret

000000a4 <MEXTI_vInit>:
#include <avr/io.h>
#include "EXTI-int.h"
#include "EXTI-con.h"

void MEXTI_vInit(void)
{
  a4:	df 93       	push	r29
  a6:	cf 93       	push	r28
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(MCUCR,3);
  ac:	a5 e5       	ldi	r26, 0x55	; 85
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	e5 e5       	ldi	r30, 0x55	; 85
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	88 60       	ori	r24, 0x08	; 8
  b8:	8c 93       	st	X, r24
	CLR_BIT(MCUCR,2);
  ba:	a5 e5       	ldi	r26, 0x55	; 85
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	e5 e5       	ldi	r30, 0x55	; 85
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	8b 7f       	andi	r24, 0xFB	; 251
  c6:	8c 93       	st	X, r24


}
  c8:	cf 91       	pop	r28
  ca:	df 91       	pop	r29
  cc:	08 95       	ret

000000ce <MDIO_vSetPinDir>:
#include "DIO_int.h"
#include<avr/io.h>


void MDIO_vSetPinDir(u8 A_u8PortNo , u8 A_u8PinNo , u8 A_u8Dir)
{
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	cd b7       	in	r28, 0x3d	; 61
  d4:	de b7       	in	r29, 0x3e	; 62
  d6:	27 97       	sbiw	r28, 0x07	; 7
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	f8 94       	cli
  dc:	de bf       	out	0x3e, r29	; 62
  de:	0f be       	out	0x3f, r0	; 63
  e0:	cd bf       	out	0x3d, r28	; 61
  e2:	89 83       	std	Y+1, r24	; 0x01
  e4:	6a 83       	std	Y+2, r22	; 0x02
  e6:	4b 83       	std	Y+3, r20	; 0x03
	if(A_u8Dir == DIO_OUTPUT)
  e8:	8b 81       	ldd	r24, Y+3	; 0x03
  ea:	81 30       	cpi	r24, 0x01	; 1
  ec:	09 f0       	breq	.+2      	; 0xf0 <MDIO_vSetPinDir+0x22>
  ee:	6f c0       	rjmp	.+222    	; 0x1ce <MDIO_vSetPinDir+0x100>
	{
		switch(A_u8PortNo)
  f0:	89 81       	ldd	r24, Y+1	; 0x01
  f2:	28 2f       	mov	r18, r24
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	3f 83       	std	Y+7, r19	; 0x07
  f8:	2e 83       	std	Y+6, r18	; 0x06
  fa:	8e 81       	ldd	r24, Y+6	; 0x06
  fc:	9f 81       	ldd	r25, Y+7	; 0x07
  fe:	81 30       	cpi	r24, 0x01	; 1
 100:	91 05       	cpc	r25, r1
 102:	49 f1       	breq	.+82     	; 0x156 <MDIO_vSetPinDir+0x88>
 104:	2e 81       	ldd	r18, Y+6	; 0x06
 106:	3f 81       	ldd	r19, Y+7	; 0x07
 108:	22 30       	cpi	r18, 0x02	; 2
 10a:	31 05       	cpc	r19, r1
 10c:	2c f4       	brge	.+10     	; 0x118 <MDIO_vSetPinDir+0x4a>
 10e:	8e 81       	ldd	r24, Y+6	; 0x06
 110:	9f 81       	ldd	r25, Y+7	; 0x07
 112:	00 97       	sbiw	r24, 0x00	; 0
 114:	61 f0       	breq	.+24     	; 0x12e <MDIO_vSetPinDir+0x60>
 116:	d2 c0       	rjmp	.+420    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
 118:	2e 81       	ldd	r18, Y+6	; 0x06
 11a:	3f 81       	ldd	r19, Y+7	; 0x07
 11c:	22 30       	cpi	r18, 0x02	; 2
 11e:	31 05       	cpc	r19, r1
 120:	71 f1       	breq	.+92     	; 0x17e <MDIO_vSetPinDir+0xb0>
 122:	8e 81       	ldd	r24, Y+6	; 0x06
 124:	9f 81       	ldd	r25, Y+7	; 0x07
 126:	83 30       	cpi	r24, 0x03	; 3
 128:	91 05       	cpc	r25, r1
 12a:	e9 f1       	breq	.+122    	; 0x1a6 <MDIO_vSetPinDir+0xd8>
 12c:	c7 c0       	rjmp	.+398    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
		{
		case DIO_PORTA :
			SET_BIT(DDRA , A_u8PinNo );
 12e:	aa e3       	ldi	r26, 0x3A	; 58
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	ea e3       	ldi	r30, 0x3A	; 58
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	48 2f       	mov	r20, r24
 13a:	8a 81       	ldd	r24, Y+2	; 0x02
 13c:	28 2f       	mov	r18, r24
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 2e       	mov	r0, r18
 146:	02 c0       	rjmp	.+4      	; 0x14c <MDIO_vSetPinDir+0x7e>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	0a 94       	dec	r0
 14e:	e2 f7       	brpl	.-8      	; 0x148 <MDIO_vSetPinDir+0x7a>
 150:	84 2b       	or	r24, r20
 152:	8c 93       	st	X, r24
 154:	b3 c0       	rjmp	.+358    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
			break;
		case DIO_PORTB :
			SET_BIT(DDRB , A_u8PinNo );
 156:	a7 e3       	ldi	r26, 0x37	; 55
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	e7 e3       	ldi	r30, 0x37	; 55
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	48 2f       	mov	r20, r24
 162:	8a 81       	ldd	r24, Y+2	; 0x02
 164:	28 2f       	mov	r18, r24
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 2e       	mov	r0, r18
 16e:	02 c0       	rjmp	.+4      	; 0x174 <MDIO_vSetPinDir+0xa6>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <MDIO_vSetPinDir+0xa2>
 178:	84 2b       	or	r24, r20
 17a:	8c 93       	st	X, r24
 17c:	9f c0       	rjmp	.+318    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
			break;
		case DIO_PORTC:
			SET_BIT(DDRC , A_u8PinNo );
 17e:	a4 e3       	ldi	r26, 0x34	; 52
 180:	b0 e0       	ldi	r27, 0x00	; 0
 182:	e4 e3       	ldi	r30, 0x34	; 52
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	48 2f       	mov	r20, r24
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	28 2f       	mov	r18, r24
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 2e       	mov	r0, r18
 196:	02 c0       	rjmp	.+4      	; 0x19c <MDIO_vSetPinDir+0xce>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	0a 94       	dec	r0
 19e:	e2 f7       	brpl	.-8      	; 0x198 <MDIO_vSetPinDir+0xca>
 1a0:	84 2b       	or	r24, r20
 1a2:	8c 93       	st	X, r24
 1a4:	8b c0       	rjmp	.+278    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
			break;
		case DIO_PORTD :
			SET_BIT(DDRD , A_u8PinNo );
 1a6:	a1 e3       	ldi	r26, 0x31	; 49
 1a8:	b0 e0       	ldi	r27, 0x00	; 0
 1aa:	e1 e3       	ldi	r30, 0x31	; 49
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	80 81       	ld	r24, Z
 1b0:	48 2f       	mov	r20, r24
 1b2:	8a 81       	ldd	r24, Y+2	; 0x02
 1b4:	28 2f       	mov	r18, r24
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	02 2e       	mov	r0, r18
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <MDIO_vSetPinDir+0xf6>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	0a 94       	dec	r0
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <MDIO_vSetPinDir+0xf2>
 1c8:	84 2b       	or	r24, r20
 1ca:	8c 93       	st	X, r24
 1cc:	77 c0       	rjmp	.+238    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
			break;
		}
	}
	else if(A_u8Dir == DIO_INPUT)
 1ce:	8b 81       	ldd	r24, Y+3	; 0x03
 1d0:	88 23       	and	r24, r24
 1d2:	09 f0       	breq	.+2      	; 0x1d6 <MDIO_vSetPinDir+0x108>
 1d4:	73 c0       	rjmp	.+230    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
	{
		switch(A_u8PortNo)
 1d6:	89 81       	ldd	r24, Y+1	; 0x01
 1d8:	28 2f       	mov	r18, r24
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	3d 83       	std	Y+5, r19	; 0x05
 1de:	2c 83       	std	Y+4, r18	; 0x04
 1e0:	8c 81       	ldd	r24, Y+4	; 0x04
 1e2:	9d 81       	ldd	r25, Y+5	; 0x05
 1e4:	81 30       	cpi	r24, 0x01	; 1
 1e6:	91 05       	cpc	r25, r1
 1e8:	59 f1       	breq	.+86     	; 0x240 <MDIO_vSetPinDir+0x172>
 1ea:	2c 81       	ldd	r18, Y+4	; 0x04
 1ec:	3d 81       	ldd	r19, Y+5	; 0x05
 1ee:	22 30       	cpi	r18, 0x02	; 2
 1f0:	31 05       	cpc	r19, r1
 1f2:	2c f4       	brge	.+10     	; 0x1fe <MDIO_vSetPinDir+0x130>
 1f4:	8c 81       	ldd	r24, Y+4	; 0x04
 1f6:	9d 81       	ldd	r25, Y+5	; 0x05
 1f8:	00 97       	sbiw	r24, 0x00	; 0
 1fa:	69 f0       	breq	.+26     	; 0x216 <MDIO_vSetPinDir+0x148>
 1fc:	5f c0       	rjmp	.+190    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
 1fe:	2c 81       	ldd	r18, Y+4	; 0x04
 200:	3d 81       	ldd	r19, Y+5	; 0x05
 202:	22 30       	cpi	r18, 0x02	; 2
 204:	31 05       	cpc	r19, r1
 206:	89 f1       	breq	.+98     	; 0x26a <MDIO_vSetPinDir+0x19c>
 208:	8c 81       	ldd	r24, Y+4	; 0x04
 20a:	9d 81       	ldd	r25, Y+5	; 0x05
 20c:	83 30       	cpi	r24, 0x03	; 3
 20e:	91 05       	cpc	r25, r1
 210:	09 f4       	brne	.+2      	; 0x214 <MDIO_vSetPinDir+0x146>
 212:	40 c0       	rjmp	.+128    	; 0x294 <MDIO_vSetPinDir+0x1c6>
 214:	53 c0       	rjmp	.+166    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
		{
		case DIO_PORTA :
			CLR_BIT(DDRA , A_u8PinNo );
 216:	aa e3       	ldi	r26, 0x3A	; 58
 218:	b0 e0       	ldi	r27, 0x00	; 0
 21a:	ea e3       	ldi	r30, 0x3A	; 58
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	80 81       	ld	r24, Z
 220:	48 2f       	mov	r20, r24
 222:	8a 81       	ldd	r24, Y+2	; 0x02
 224:	28 2f       	mov	r18, r24
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 2e       	mov	r0, r18
 22e:	02 c0       	rjmp	.+4      	; 0x234 <MDIO_vSetPinDir+0x166>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	0a 94       	dec	r0
 236:	e2 f7       	brpl	.-8      	; 0x230 <MDIO_vSetPinDir+0x162>
 238:	80 95       	com	r24
 23a:	84 23       	and	r24, r20
 23c:	8c 93       	st	X, r24
 23e:	3e c0       	rjmp	.+124    	; 0x2bc <MDIO_vSetPinDir+0x1ee>
			break;
		case DIO_PORTB :
			CLR_BIT(DDRB , A_u8PinNo );
 240:	a7 e3       	ldi	r26, 0x37	; 55
 242:	b0 e0       	ldi	r27, 0x00	; 0
 244:	e7 e3       	ldi	r30, 0x37	; 55
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	48 2f       	mov	r20, r24
 24c:	8a 81       	ldd	r24, Y+2	; 0x02
 24e:	28 2f       	mov	r18, r24
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	02 2e       	mov	r0, r18
 258:	02 c0       	rjmp	.+4      	; 0x25e <MDIO_vSetPinDir+0x190>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	0a 94       	dec	r0
 260:	e2 f7       	brpl	.-8      	; 0x25a <MDIO_vSetPinDir+0x18c>
 262:	80 95       	com	r24
 264:	84 23       	and	r24, r20
 266:	8c 93       	st	X, r24
 268:	29 c0       	rjmp	.+82     	; 0x2bc <MDIO_vSetPinDir+0x1ee>
			break;
		case DIO_PORTC :
			CLR_BIT(DDRC , A_u8PinNo );
 26a:	a4 e3       	ldi	r26, 0x34	; 52
 26c:	b0 e0       	ldi	r27, 0x00	; 0
 26e:	e4 e3       	ldi	r30, 0x34	; 52
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	48 2f       	mov	r20, r24
 276:	8a 81       	ldd	r24, Y+2	; 0x02
 278:	28 2f       	mov	r18, r24
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 2e       	mov	r0, r18
 282:	02 c0       	rjmp	.+4      	; 0x288 <MDIO_vSetPinDir+0x1ba>
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	0a 94       	dec	r0
 28a:	e2 f7       	brpl	.-8      	; 0x284 <MDIO_vSetPinDir+0x1b6>
 28c:	80 95       	com	r24
 28e:	84 23       	and	r24, r20
 290:	8c 93       	st	X, r24
 292:	14 c0       	rjmp	.+40     	; 0x2bc <MDIO_vSetPinDir+0x1ee>
			break;
		case DIO_PORTD :
			CLR_BIT(DDRD , A_u8PinNo );
 294:	a1 e3       	ldi	r26, 0x31	; 49
 296:	b0 e0       	ldi	r27, 0x00	; 0
 298:	e1 e3       	ldi	r30, 0x31	; 49
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	48 2f       	mov	r20, r24
 2a0:	8a 81       	ldd	r24, Y+2	; 0x02
 2a2:	28 2f       	mov	r18, r24
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	02 2e       	mov	r0, r18
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <MDIO_vSetPinDir+0x1e4>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	0a 94       	dec	r0
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <MDIO_vSetPinDir+0x1e0>
 2b6:	80 95       	com	r24
 2b8:	84 23       	and	r24, r20
 2ba:	8c 93       	st	X, r24
			break;
		}
	}
}
 2bc:	27 96       	adiw	r28, 0x07	; 7
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	f8 94       	cli
 2c2:	de bf       	out	0x3e, r29	; 62
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	cd bf       	out	0x3d, r28	; 61
 2c8:	cf 91       	pop	r28
 2ca:	df 91       	pop	r29
 2cc:	08 95       	ret

000002ce <MDIO_vSetPinVal>:

void MDIO_vSetPinVal(u8 A_u8PortNo ,u8 A_u8PinNo , u8 A_u8Val)
{
 2ce:	df 93       	push	r29
 2d0:	cf 93       	push	r28
 2d2:	cd b7       	in	r28, 0x3d	; 61
 2d4:	de b7       	in	r29, 0x3e	; 62
 2d6:	27 97       	sbiw	r28, 0x07	; 7
 2d8:	0f b6       	in	r0, 0x3f	; 63
 2da:	f8 94       	cli
 2dc:	de bf       	out	0x3e, r29	; 62
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	cd bf       	out	0x3d, r28	; 61
 2e2:	89 83       	std	Y+1, r24	; 0x01
 2e4:	6a 83       	std	Y+2, r22	; 0x02
 2e6:	4b 83       	std	Y+3, r20	; 0x03
	if(A_u8Val == DIO_HIGH)
 2e8:	8b 81       	ldd	r24, Y+3	; 0x03
 2ea:	81 30       	cpi	r24, 0x01	; 1
 2ec:	09 f0       	breq	.+2      	; 0x2f0 <MDIO_vSetPinVal+0x22>
 2ee:	6f c0       	rjmp	.+222    	; 0x3ce <MDIO_vSetPinVal+0x100>
	{
		switch(A_u8PortNo)
 2f0:	89 81       	ldd	r24, Y+1	; 0x01
 2f2:	28 2f       	mov	r18, r24
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	3f 83       	std	Y+7, r19	; 0x07
 2f8:	2e 83       	std	Y+6, r18	; 0x06
 2fa:	8e 81       	ldd	r24, Y+6	; 0x06
 2fc:	9f 81       	ldd	r25, Y+7	; 0x07
 2fe:	81 30       	cpi	r24, 0x01	; 1
 300:	91 05       	cpc	r25, r1
 302:	49 f1       	breq	.+82     	; 0x356 <MDIO_vSetPinVal+0x88>
 304:	2e 81       	ldd	r18, Y+6	; 0x06
 306:	3f 81       	ldd	r19, Y+7	; 0x07
 308:	22 30       	cpi	r18, 0x02	; 2
 30a:	31 05       	cpc	r19, r1
 30c:	2c f4       	brge	.+10     	; 0x318 <MDIO_vSetPinVal+0x4a>
 30e:	8e 81       	ldd	r24, Y+6	; 0x06
 310:	9f 81       	ldd	r25, Y+7	; 0x07
 312:	00 97       	sbiw	r24, 0x00	; 0
 314:	61 f0       	breq	.+24     	; 0x32e <MDIO_vSetPinVal+0x60>
 316:	d2 c0       	rjmp	.+420    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
 318:	2e 81       	ldd	r18, Y+6	; 0x06
 31a:	3f 81       	ldd	r19, Y+7	; 0x07
 31c:	22 30       	cpi	r18, 0x02	; 2
 31e:	31 05       	cpc	r19, r1
 320:	71 f1       	breq	.+92     	; 0x37e <MDIO_vSetPinVal+0xb0>
 322:	8e 81       	ldd	r24, Y+6	; 0x06
 324:	9f 81       	ldd	r25, Y+7	; 0x07
 326:	83 30       	cpi	r24, 0x03	; 3
 328:	91 05       	cpc	r25, r1
 32a:	e9 f1       	breq	.+122    	; 0x3a6 <MDIO_vSetPinVal+0xd8>
 32c:	c7 c0       	rjmp	.+398    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
		{
		case DIO_PORTA :
			SET_BIT(PORTA , A_u8PinNo );
 32e:	ab e3       	ldi	r26, 0x3B	; 59
 330:	b0 e0       	ldi	r27, 0x00	; 0
 332:	eb e3       	ldi	r30, 0x3B	; 59
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	80 81       	ld	r24, Z
 338:	48 2f       	mov	r20, r24
 33a:	8a 81       	ldd	r24, Y+2	; 0x02
 33c:	28 2f       	mov	r18, r24
 33e:	30 e0       	ldi	r19, 0x00	; 0
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	02 2e       	mov	r0, r18
 346:	02 c0       	rjmp	.+4      	; 0x34c <MDIO_vSetPinVal+0x7e>
 348:	88 0f       	add	r24, r24
 34a:	99 1f       	adc	r25, r25
 34c:	0a 94       	dec	r0
 34e:	e2 f7       	brpl	.-8      	; 0x348 <MDIO_vSetPinVal+0x7a>
 350:	84 2b       	or	r24, r20
 352:	8c 93       	st	X, r24
 354:	b3 c0       	rjmp	.+358    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
			break;
		case DIO_PORTB :
			SET_BIT(PORTB, A_u8PinNo );
 356:	a8 e3       	ldi	r26, 0x38	; 56
 358:	b0 e0       	ldi	r27, 0x00	; 0
 35a:	e8 e3       	ldi	r30, 0x38	; 56
 35c:	f0 e0       	ldi	r31, 0x00	; 0
 35e:	80 81       	ld	r24, Z
 360:	48 2f       	mov	r20, r24
 362:	8a 81       	ldd	r24, Y+2	; 0x02
 364:	28 2f       	mov	r18, r24
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	02 2e       	mov	r0, r18
 36e:	02 c0       	rjmp	.+4      	; 0x374 <MDIO_vSetPinVal+0xa6>
 370:	88 0f       	add	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	0a 94       	dec	r0
 376:	e2 f7       	brpl	.-8      	; 0x370 <MDIO_vSetPinVal+0xa2>
 378:	84 2b       	or	r24, r20
 37a:	8c 93       	st	X, r24
 37c:	9f c0       	rjmp	.+318    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
			break;
		case DIO_PORTC:
			SET_BIT(PORTC , A_u8PinNo );
 37e:	a5 e3       	ldi	r26, 0x35	; 53
 380:	b0 e0       	ldi	r27, 0x00	; 0
 382:	e5 e3       	ldi	r30, 0x35	; 53
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	80 81       	ld	r24, Z
 388:	48 2f       	mov	r20, r24
 38a:	8a 81       	ldd	r24, Y+2	; 0x02
 38c:	28 2f       	mov	r18, r24
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	02 2e       	mov	r0, r18
 396:	02 c0       	rjmp	.+4      	; 0x39c <MDIO_vSetPinVal+0xce>
 398:	88 0f       	add	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	0a 94       	dec	r0
 39e:	e2 f7       	brpl	.-8      	; 0x398 <MDIO_vSetPinVal+0xca>
 3a0:	84 2b       	or	r24, r20
 3a2:	8c 93       	st	X, r24
 3a4:	8b c0       	rjmp	.+278    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
			break;
		case DIO_PORTD :
			SET_BIT(PORTD , A_u8PinNo );
 3a6:	a2 e3       	ldi	r26, 0x32	; 50
 3a8:	b0 e0       	ldi	r27, 0x00	; 0
 3aa:	e2 e3       	ldi	r30, 0x32	; 50
 3ac:	f0 e0       	ldi	r31, 0x00	; 0
 3ae:	80 81       	ld	r24, Z
 3b0:	48 2f       	mov	r20, r24
 3b2:	8a 81       	ldd	r24, Y+2	; 0x02
 3b4:	28 2f       	mov	r18, r24
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 2e       	mov	r0, r18
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <MDIO_vSetPinVal+0xf6>
 3c0:	88 0f       	add	r24, r24
 3c2:	99 1f       	adc	r25, r25
 3c4:	0a 94       	dec	r0
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <MDIO_vSetPinVal+0xf2>
 3c8:	84 2b       	or	r24, r20
 3ca:	8c 93       	st	X, r24
 3cc:	77 c0       	rjmp	.+238    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
			break;
		}
	}
	else if(A_u8Val == DIO_LOW)
 3ce:	8b 81       	ldd	r24, Y+3	; 0x03
 3d0:	88 23       	and	r24, r24
 3d2:	09 f0       	breq	.+2      	; 0x3d6 <MDIO_vSetPinVal+0x108>
 3d4:	73 c0       	rjmp	.+230    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
	{
		switch(A_u8PortNo)
 3d6:	89 81       	ldd	r24, Y+1	; 0x01
 3d8:	28 2f       	mov	r18, r24
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	3d 83       	std	Y+5, r19	; 0x05
 3de:	2c 83       	std	Y+4, r18	; 0x04
 3e0:	8c 81       	ldd	r24, Y+4	; 0x04
 3e2:	9d 81       	ldd	r25, Y+5	; 0x05
 3e4:	81 30       	cpi	r24, 0x01	; 1
 3e6:	91 05       	cpc	r25, r1
 3e8:	59 f1       	breq	.+86     	; 0x440 <MDIO_vSetPinVal+0x172>
 3ea:	2c 81       	ldd	r18, Y+4	; 0x04
 3ec:	3d 81       	ldd	r19, Y+5	; 0x05
 3ee:	22 30       	cpi	r18, 0x02	; 2
 3f0:	31 05       	cpc	r19, r1
 3f2:	2c f4       	brge	.+10     	; 0x3fe <MDIO_vSetPinVal+0x130>
 3f4:	8c 81       	ldd	r24, Y+4	; 0x04
 3f6:	9d 81       	ldd	r25, Y+5	; 0x05
 3f8:	00 97       	sbiw	r24, 0x00	; 0
 3fa:	69 f0       	breq	.+26     	; 0x416 <MDIO_vSetPinVal+0x148>
 3fc:	5f c0       	rjmp	.+190    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
 3fe:	2c 81       	ldd	r18, Y+4	; 0x04
 400:	3d 81       	ldd	r19, Y+5	; 0x05
 402:	22 30       	cpi	r18, 0x02	; 2
 404:	31 05       	cpc	r19, r1
 406:	89 f1       	breq	.+98     	; 0x46a <MDIO_vSetPinVal+0x19c>
 408:	8c 81       	ldd	r24, Y+4	; 0x04
 40a:	9d 81       	ldd	r25, Y+5	; 0x05
 40c:	83 30       	cpi	r24, 0x03	; 3
 40e:	91 05       	cpc	r25, r1
 410:	09 f4       	brne	.+2      	; 0x414 <MDIO_vSetPinVal+0x146>
 412:	40 c0       	rjmp	.+128    	; 0x494 <MDIO_vSetPinVal+0x1c6>
 414:	53 c0       	rjmp	.+166    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
		{
		case DIO_PORTA :
			CLR_BIT(PORTA , A_u8PinNo );
 416:	ab e3       	ldi	r26, 0x3B	; 59
 418:	b0 e0       	ldi	r27, 0x00	; 0
 41a:	eb e3       	ldi	r30, 0x3B	; 59
 41c:	f0 e0       	ldi	r31, 0x00	; 0
 41e:	80 81       	ld	r24, Z
 420:	48 2f       	mov	r20, r24
 422:	8a 81       	ldd	r24, Y+2	; 0x02
 424:	28 2f       	mov	r18, r24
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 2e       	mov	r0, r18
 42e:	02 c0       	rjmp	.+4      	; 0x434 <MDIO_vSetPinVal+0x166>
 430:	88 0f       	add	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	0a 94       	dec	r0
 436:	e2 f7       	brpl	.-8      	; 0x430 <MDIO_vSetPinVal+0x162>
 438:	80 95       	com	r24
 43a:	84 23       	and	r24, r20
 43c:	8c 93       	st	X, r24
 43e:	3e c0       	rjmp	.+124    	; 0x4bc <MDIO_vSetPinVal+0x1ee>
			break;
		case DIO_PORTB :
			CLR_BIT(PORTB , A_u8PinNo );
 440:	a8 e3       	ldi	r26, 0x38	; 56
 442:	b0 e0       	ldi	r27, 0x00	; 0
 444:	e8 e3       	ldi	r30, 0x38	; 56
 446:	f0 e0       	ldi	r31, 0x00	; 0
 448:	80 81       	ld	r24, Z
 44a:	48 2f       	mov	r20, r24
 44c:	8a 81       	ldd	r24, Y+2	; 0x02
 44e:	28 2f       	mov	r18, r24
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	02 2e       	mov	r0, r18
 458:	02 c0       	rjmp	.+4      	; 0x45e <MDIO_vSetPinVal+0x190>
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	0a 94       	dec	r0
 460:	e2 f7       	brpl	.-8      	; 0x45a <MDIO_vSetPinVal+0x18c>
 462:	80 95       	com	r24
 464:	84 23       	and	r24, r20
 466:	8c 93       	st	X, r24
 468:	29 c0       	rjmp	.+82     	; 0x4bc <MDIO_vSetPinVal+0x1ee>
			break;
		case DIO_PORTC :
			CLR_BIT(PORTC , A_u8PinNo );
 46a:	a5 e3       	ldi	r26, 0x35	; 53
 46c:	b0 e0       	ldi	r27, 0x00	; 0
 46e:	e5 e3       	ldi	r30, 0x35	; 53
 470:	f0 e0       	ldi	r31, 0x00	; 0
 472:	80 81       	ld	r24, Z
 474:	48 2f       	mov	r20, r24
 476:	8a 81       	ldd	r24, Y+2	; 0x02
 478:	28 2f       	mov	r18, r24
 47a:	30 e0       	ldi	r19, 0x00	; 0
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	02 2e       	mov	r0, r18
 482:	02 c0       	rjmp	.+4      	; 0x488 <MDIO_vSetPinVal+0x1ba>
 484:	88 0f       	add	r24, r24
 486:	99 1f       	adc	r25, r25
 488:	0a 94       	dec	r0
 48a:	e2 f7       	brpl	.-8      	; 0x484 <MDIO_vSetPinVal+0x1b6>
 48c:	80 95       	com	r24
 48e:	84 23       	and	r24, r20
 490:	8c 93       	st	X, r24
 492:	14 c0       	rjmp	.+40     	; 0x4bc <MDIO_vSetPinVal+0x1ee>
			break;
		case DIO_PORTD :
			CLR_BIT(PORTD , A_u8PinNo );
 494:	a2 e3       	ldi	r26, 0x32	; 50
 496:	b0 e0       	ldi	r27, 0x00	; 0
 498:	e2 e3       	ldi	r30, 0x32	; 50
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	80 81       	ld	r24, Z
 49e:	48 2f       	mov	r20, r24
 4a0:	8a 81       	ldd	r24, Y+2	; 0x02
 4a2:	28 2f       	mov	r18, r24
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	02 2e       	mov	r0, r18
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <MDIO_vSetPinVal+0x1e4>
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	0a 94       	dec	r0
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <MDIO_vSetPinVal+0x1e0>
 4b6:	80 95       	com	r24
 4b8:	84 23       	and	r24, r20
 4ba:	8c 93       	st	X, r24
			break;
		}
	}

}
 4bc:	27 96       	adiw	r28, 0x07	; 7
 4be:	0f b6       	in	r0, 0x3f	; 63
 4c0:	f8 94       	cli
 4c2:	de bf       	out	0x3e, r29	; 62
 4c4:	0f be       	out	0x3f, r0	; 63
 4c6:	cd bf       	out	0x3d, r28	; 61
 4c8:	cf 91       	pop	r28
 4ca:	df 91       	pop	r29
 4cc:	08 95       	ret

000004ce <MDIO_vTogPinVal>:

void MDIO_vTogPinVal(u8 A_u8PortNo ,u8 A_u8PinNo)
{
 4ce:	df 93       	push	r29
 4d0:	cf 93       	push	r28
 4d2:	00 d0       	rcall	.+0      	; 0x4d4 <MDIO_vTogPinVal+0x6>
 4d4:	00 d0       	rcall	.+0      	; 0x4d6 <MDIO_vTogPinVal+0x8>
 4d6:	cd b7       	in	r28, 0x3d	; 61
 4d8:	de b7       	in	r29, 0x3e	; 62
 4da:	89 83       	std	Y+1, r24	; 0x01
 4dc:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_u8PortNo)
 4de:	89 81       	ldd	r24, Y+1	; 0x01
 4e0:	28 2f       	mov	r18, r24
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	3c 83       	std	Y+4, r19	; 0x04
 4e6:	2b 83       	std	Y+3, r18	; 0x03
 4e8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ea:	9c 81       	ldd	r25, Y+4	; 0x04
 4ec:	81 30       	cpi	r24, 0x01	; 1
 4ee:	91 05       	cpc	r25, r1
 4f0:	49 f1       	breq	.+82     	; 0x544 <MDIO_vTogPinVal+0x76>
 4f2:	2b 81       	ldd	r18, Y+3	; 0x03
 4f4:	3c 81       	ldd	r19, Y+4	; 0x04
 4f6:	22 30       	cpi	r18, 0x02	; 2
 4f8:	31 05       	cpc	r19, r1
 4fa:	2c f4       	brge	.+10     	; 0x506 <MDIO_vTogPinVal+0x38>
 4fc:	8b 81       	ldd	r24, Y+3	; 0x03
 4fe:	9c 81       	ldd	r25, Y+4	; 0x04
 500:	00 97       	sbiw	r24, 0x00	; 0
 502:	61 f0       	breq	.+24     	; 0x51c <MDIO_vTogPinVal+0x4e>
 504:	5a c0       	rjmp	.+180    	; 0x5ba <MDIO_vTogPinVal+0xec>
 506:	2b 81       	ldd	r18, Y+3	; 0x03
 508:	3c 81       	ldd	r19, Y+4	; 0x04
 50a:	22 30       	cpi	r18, 0x02	; 2
 50c:	31 05       	cpc	r19, r1
 50e:	71 f1       	breq	.+92     	; 0x56c <MDIO_vTogPinVal+0x9e>
 510:	8b 81       	ldd	r24, Y+3	; 0x03
 512:	9c 81       	ldd	r25, Y+4	; 0x04
 514:	83 30       	cpi	r24, 0x03	; 3
 516:	91 05       	cpc	r25, r1
 518:	e9 f1       	breq	.+122    	; 0x594 <MDIO_vTogPinVal+0xc6>
 51a:	4f c0       	rjmp	.+158    	; 0x5ba <MDIO_vTogPinVal+0xec>
	{
	case DIO_PORTA :
		TOG_BIT(PORTA , A_u8PinNo );
 51c:	ab e3       	ldi	r26, 0x3B	; 59
 51e:	b0 e0       	ldi	r27, 0x00	; 0
 520:	eb e3       	ldi	r30, 0x3B	; 59
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	80 81       	ld	r24, Z
 526:	48 2f       	mov	r20, r24
 528:	8a 81       	ldd	r24, Y+2	; 0x02
 52a:	28 2f       	mov	r18, r24
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	02 2e       	mov	r0, r18
 534:	02 c0       	rjmp	.+4      	; 0x53a <MDIO_vTogPinVal+0x6c>
 536:	88 0f       	add	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	0a 94       	dec	r0
 53c:	e2 f7       	brpl	.-8      	; 0x536 <MDIO_vTogPinVal+0x68>
 53e:	84 27       	eor	r24, r20
 540:	8c 93       	st	X, r24
 542:	3b c0       	rjmp	.+118    	; 0x5ba <MDIO_vTogPinVal+0xec>
		break;
	case DIO_PORTB :
		TOG_BIT(PORTB, A_u8PinNo );
 544:	a8 e3       	ldi	r26, 0x38	; 56
 546:	b0 e0       	ldi	r27, 0x00	; 0
 548:	e8 e3       	ldi	r30, 0x38	; 56
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	80 81       	ld	r24, Z
 54e:	48 2f       	mov	r20, r24
 550:	8a 81       	ldd	r24, Y+2	; 0x02
 552:	28 2f       	mov	r18, r24
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	02 2e       	mov	r0, r18
 55c:	02 c0       	rjmp	.+4      	; 0x562 <MDIO_vTogPinVal+0x94>
 55e:	88 0f       	add	r24, r24
 560:	99 1f       	adc	r25, r25
 562:	0a 94       	dec	r0
 564:	e2 f7       	brpl	.-8      	; 0x55e <MDIO_vTogPinVal+0x90>
 566:	84 27       	eor	r24, r20
 568:	8c 93       	st	X, r24
 56a:	27 c0       	rjmp	.+78     	; 0x5ba <MDIO_vTogPinVal+0xec>
		break;
	case DIO_PORTC:
		TOG_BIT(PORTC , A_u8PinNo );
 56c:	a5 e3       	ldi	r26, 0x35	; 53
 56e:	b0 e0       	ldi	r27, 0x00	; 0
 570:	e5 e3       	ldi	r30, 0x35	; 53
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	80 81       	ld	r24, Z
 576:	48 2f       	mov	r20, r24
 578:	8a 81       	ldd	r24, Y+2	; 0x02
 57a:	28 2f       	mov	r18, r24
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	81 e0       	ldi	r24, 0x01	; 1
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	02 2e       	mov	r0, r18
 584:	02 c0       	rjmp	.+4      	; 0x58a <MDIO_vTogPinVal+0xbc>
 586:	88 0f       	add	r24, r24
 588:	99 1f       	adc	r25, r25
 58a:	0a 94       	dec	r0
 58c:	e2 f7       	brpl	.-8      	; 0x586 <MDIO_vTogPinVal+0xb8>
 58e:	84 27       	eor	r24, r20
 590:	8c 93       	st	X, r24
 592:	13 c0       	rjmp	.+38     	; 0x5ba <MDIO_vTogPinVal+0xec>
		break;
	case DIO_PORTD :
		TOG_BIT(PORTD , A_u8PinNo );
 594:	a2 e3       	ldi	r26, 0x32	; 50
 596:	b0 e0       	ldi	r27, 0x00	; 0
 598:	e2 e3       	ldi	r30, 0x32	; 50
 59a:	f0 e0       	ldi	r31, 0x00	; 0
 59c:	80 81       	ld	r24, Z
 59e:	48 2f       	mov	r20, r24
 5a0:	8a 81       	ldd	r24, Y+2	; 0x02
 5a2:	28 2f       	mov	r18, r24
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	81 e0       	ldi	r24, 0x01	; 1
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	02 2e       	mov	r0, r18
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <MDIO_vTogPinVal+0xe4>
 5ae:	88 0f       	add	r24, r24
 5b0:	99 1f       	adc	r25, r25
 5b2:	0a 94       	dec	r0
 5b4:	e2 f7       	brpl	.-8      	; 0x5ae <MDIO_vTogPinVal+0xe0>
 5b6:	84 27       	eor	r24, r20
 5b8:	8c 93       	st	X, r24
		break;
	}
}
 5ba:	0f 90       	pop	r0
 5bc:	0f 90       	pop	r0
 5be:	0f 90       	pop	r0
 5c0:	0f 90       	pop	r0
 5c2:	cf 91       	pop	r28
 5c4:	df 91       	pop	r29
 5c6:	08 95       	ret

000005c8 <MDIO_u8GetPinVal>:

u8 MDIO_u8GetPinVal(u8 A_u8PortNo , u8 A_u8PinNo)
{
 5c8:	df 93       	push	r29
 5ca:	cf 93       	push	r28
 5cc:	00 d0       	rcall	.+0      	; 0x5ce <MDIO_u8GetPinVal+0x6>
 5ce:	00 d0       	rcall	.+0      	; 0x5d0 <MDIO_u8GetPinVal+0x8>
 5d0:	0f 92       	push	r0
 5d2:	cd b7       	in	r28, 0x3d	; 61
 5d4:	de b7       	in	r29, 0x3e	; 62
 5d6:	8a 83       	std	Y+2, r24	; 0x02
 5d8:	6b 83       	std	Y+3, r22	; 0x03
	u8 L_PinVal = 0;
 5da:	19 82       	std	Y+1, r1	; 0x01

	switch(A_u8PortNo)
 5dc:	8a 81       	ldd	r24, Y+2	; 0x02
 5de:	28 2f       	mov	r18, r24
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	3d 83       	std	Y+5, r19	; 0x05
 5e4:	2c 83       	std	Y+4, r18	; 0x04
 5e6:	4c 81       	ldd	r20, Y+4	; 0x04
 5e8:	5d 81       	ldd	r21, Y+5	; 0x05
 5ea:	41 30       	cpi	r20, 0x01	; 1
 5ec:	51 05       	cpc	r21, r1
 5ee:	41 f1       	breq	.+80     	; 0x640 <MDIO_u8GetPinVal+0x78>
 5f0:	8c 81       	ldd	r24, Y+4	; 0x04
 5f2:	9d 81       	ldd	r25, Y+5	; 0x05
 5f4:	82 30       	cpi	r24, 0x02	; 2
 5f6:	91 05       	cpc	r25, r1
 5f8:	34 f4       	brge	.+12     	; 0x606 <MDIO_u8GetPinVal+0x3e>
 5fa:	2c 81       	ldd	r18, Y+4	; 0x04
 5fc:	3d 81       	ldd	r19, Y+5	; 0x05
 5fe:	21 15       	cp	r18, r1
 600:	31 05       	cpc	r19, r1
 602:	61 f0       	breq	.+24     	; 0x61c <MDIO_u8GetPinVal+0x54>
 604:	52 c0       	rjmp	.+164    	; 0x6aa <MDIO_u8GetPinVal+0xe2>
 606:	4c 81       	ldd	r20, Y+4	; 0x04
 608:	5d 81       	ldd	r21, Y+5	; 0x05
 60a:	42 30       	cpi	r20, 0x02	; 2
 60c:	51 05       	cpc	r21, r1
 60e:	51 f1       	breq	.+84     	; 0x664 <MDIO_u8GetPinVal+0x9c>
 610:	8c 81       	ldd	r24, Y+4	; 0x04
 612:	9d 81       	ldd	r25, Y+5	; 0x05
 614:	83 30       	cpi	r24, 0x03	; 3
 616:	91 05       	cpc	r25, r1
 618:	b9 f1       	breq	.+110    	; 0x688 <MDIO_u8GetPinVal+0xc0>
 61a:	47 c0       	rjmp	.+142    	; 0x6aa <MDIO_u8GetPinVal+0xe2>
	{
	case DIO_PORTA :
		L_PinVal = GET_BIT(PINA , A_u8PinNo );
 61c:	e9 e3       	ldi	r30, 0x39	; 57
 61e:	f0 e0       	ldi	r31, 0x00	; 0
 620:	80 81       	ld	r24, Z
 622:	28 2f       	mov	r18, r24
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	8b 81       	ldd	r24, Y+3	; 0x03
 628:	88 2f       	mov	r24, r24
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	a9 01       	movw	r20, r18
 62e:	02 c0       	rjmp	.+4      	; 0x634 <MDIO_u8GetPinVal+0x6c>
 630:	55 95       	asr	r21
 632:	47 95       	ror	r20
 634:	8a 95       	dec	r24
 636:	e2 f7       	brpl	.-8      	; 0x630 <MDIO_u8GetPinVal+0x68>
 638:	ca 01       	movw	r24, r20
 63a:	81 70       	andi	r24, 0x01	; 1
 63c:	89 83       	std	Y+1, r24	; 0x01
 63e:	35 c0       	rjmp	.+106    	; 0x6aa <MDIO_u8GetPinVal+0xe2>
		break;
	case DIO_PORTB :
		L_PinVal = GET_BIT(PINB , A_u8PinNo );
 640:	e6 e3       	ldi	r30, 0x36	; 54
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	80 81       	ld	r24, Z
 646:	28 2f       	mov	r18, r24
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	8b 81       	ldd	r24, Y+3	; 0x03
 64c:	88 2f       	mov	r24, r24
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	a9 01       	movw	r20, r18
 652:	02 c0       	rjmp	.+4      	; 0x658 <MDIO_u8GetPinVal+0x90>
 654:	55 95       	asr	r21
 656:	47 95       	ror	r20
 658:	8a 95       	dec	r24
 65a:	e2 f7       	brpl	.-8      	; 0x654 <MDIO_u8GetPinVal+0x8c>
 65c:	ca 01       	movw	r24, r20
 65e:	81 70       	andi	r24, 0x01	; 1
 660:	89 83       	std	Y+1, r24	; 0x01
 662:	23 c0       	rjmp	.+70     	; 0x6aa <MDIO_u8GetPinVal+0xe2>
		break;
	case DIO_PORTC :
		L_PinVal = GET_BIT(PINC , A_u8PinNo );
 664:	e3 e3       	ldi	r30, 0x33	; 51
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	80 81       	ld	r24, Z
 66a:	28 2f       	mov	r18, r24
 66c:	30 e0       	ldi	r19, 0x00	; 0
 66e:	8b 81       	ldd	r24, Y+3	; 0x03
 670:	88 2f       	mov	r24, r24
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	a9 01       	movw	r20, r18
 676:	02 c0       	rjmp	.+4      	; 0x67c <MDIO_u8GetPinVal+0xb4>
 678:	55 95       	asr	r21
 67a:	47 95       	ror	r20
 67c:	8a 95       	dec	r24
 67e:	e2 f7       	brpl	.-8      	; 0x678 <MDIO_u8GetPinVal+0xb0>
 680:	ca 01       	movw	r24, r20
 682:	81 70       	andi	r24, 0x01	; 1
 684:	89 83       	std	Y+1, r24	; 0x01
 686:	11 c0       	rjmp	.+34     	; 0x6aa <MDIO_u8GetPinVal+0xe2>
		break;
	case DIO_PORTD :
		L_PinVal = GET_BIT(PIND , A_u8PinNo );
 688:	e0 e3       	ldi	r30, 0x30	; 48
 68a:	f0 e0       	ldi	r31, 0x00	; 0
 68c:	80 81       	ld	r24, Z
 68e:	28 2f       	mov	r18, r24
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	8b 81       	ldd	r24, Y+3	; 0x03
 694:	88 2f       	mov	r24, r24
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	a9 01       	movw	r20, r18
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <MDIO_u8GetPinVal+0xd8>
 69c:	55 95       	asr	r21
 69e:	47 95       	ror	r20
 6a0:	8a 95       	dec	r24
 6a2:	e2 f7       	brpl	.-8      	; 0x69c <MDIO_u8GetPinVal+0xd4>
 6a4:	ca 01       	movw	r24, r20
 6a6:	81 70       	andi	r24, 0x01	; 1
 6a8:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return L_PinVal ;
 6aa:	89 81       	ldd	r24, Y+1	; 0x01
}
 6ac:	0f 90       	pop	r0
 6ae:	0f 90       	pop	r0
 6b0:	0f 90       	pop	r0
 6b2:	0f 90       	pop	r0
 6b4:	0f 90       	pop	r0
 6b6:	cf 91       	pop	r28
 6b8:	df 91       	pop	r29
 6ba:	08 95       	ret

000006bc <MDIO_vSetPortDir>:

void MDIO_vSetPortDir(u8 A_u8PortNo , u8 A_u8Dir)
{
 6bc:	df 93       	push	r29
 6be:	cf 93       	push	r28
 6c0:	00 d0       	rcall	.+0      	; 0x6c2 <MDIO_vSetPortDir+0x6>
 6c2:	00 d0       	rcall	.+0      	; 0x6c4 <MDIO_vSetPortDir+0x8>
 6c4:	cd b7       	in	r28, 0x3d	; 61
 6c6:	de b7       	in	r29, 0x3e	; 62
 6c8:	89 83       	std	Y+1, r24	; 0x01
 6ca:	6a 83       	std	Y+2, r22	; 0x02

	switch(A_u8PortNo)
 6cc:	89 81       	ldd	r24, Y+1	; 0x01
 6ce:	28 2f       	mov	r18, r24
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	3c 83       	std	Y+4, r19	; 0x04
 6d4:	2b 83       	std	Y+3, r18	; 0x03
 6d6:	8b 81       	ldd	r24, Y+3	; 0x03
 6d8:	9c 81       	ldd	r25, Y+4	; 0x04
 6da:	81 30       	cpi	r24, 0x01	; 1
 6dc:	91 05       	cpc	r25, r1
 6de:	d1 f0       	breq	.+52     	; 0x714 <MDIO_vSetPortDir+0x58>
 6e0:	2b 81       	ldd	r18, Y+3	; 0x03
 6e2:	3c 81       	ldd	r19, Y+4	; 0x04
 6e4:	22 30       	cpi	r18, 0x02	; 2
 6e6:	31 05       	cpc	r19, r1
 6e8:	2c f4       	brge	.+10     	; 0x6f4 <MDIO_vSetPortDir+0x38>
 6ea:	8b 81       	ldd	r24, Y+3	; 0x03
 6ec:	9c 81       	ldd	r25, Y+4	; 0x04
 6ee:	00 97       	sbiw	r24, 0x00	; 0
 6f0:	61 f0       	breq	.+24     	; 0x70a <MDIO_vSetPortDir+0x4e>
 6f2:	1e c0       	rjmp	.+60     	; 0x730 <MDIO_vSetPortDir+0x74>
 6f4:	2b 81       	ldd	r18, Y+3	; 0x03
 6f6:	3c 81       	ldd	r19, Y+4	; 0x04
 6f8:	22 30       	cpi	r18, 0x02	; 2
 6fa:	31 05       	cpc	r19, r1
 6fc:	81 f0       	breq	.+32     	; 0x71e <MDIO_vSetPortDir+0x62>
 6fe:	8b 81       	ldd	r24, Y+3	; 0x03
 700:	9c 81       	ldd	r25, Y+4	; 0x04
 702:	83 30       	cpi	r24, 0x03	; 3
 704:	91 05       	cpc	r25, r1
 706:	81 f0       	breq	.+32     	; 0x728 <MDIO_vSetPortDir+0x6c>
 708:	13 c0       	rjmp	.+38     	; 0x730 <MDIO_vSetPortDir+0x74>
	{
	case DIO_PORTA :
		DDRA =  A_u8Dir;
 70a:	ea e3       	ldi	r30, 0x3A	; 58
 70c:	f0 e0       	ldi	r31, 0x00	; 0
 70e:	8a 81       	ldd	r24, Y+2	; 0x02
 710:	80 83       	st	Z, r24
 712:	0e c0       	rjmp	.+28     	; 0x730 <MDIO_vSetPortDir+0x74>
		break;
	case DIO_PORTB :
		DDRB = A_u8Dir;
 714:	e7 e3       	ldi	r30, 0x37	; 55
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	8a 81       	ldd	r24, Y+2	; 0x02
 71a:	80 83       	st	Z, r24
 71c:	09 c0       	rjmp	.+18     	; 0x730 <MDIO_vSetPortDir+0x74>
		break;
	case DIO_PORTC:
		DDRC = A_u8Dir ;
 71e:	e4 e3       	ldi	r30, 0x34	; 52
 720:	f0 e0       	ldi	r31, 0x00	; 0
 722:	8a 81       	ldd	r24, Y+2	; 0x02
 724:	80 83       	st	Z, r24
 726:	04 c0       	rjmp	.+8      	; 0x730 <MDIO_vSetPortDir+0x74>
		break;
	case DIO_PORTD :
		DDRD = A_u8Dir ;
 728:	e1 e3       	ldi	r30, 0x31	; 49
 72a:	f0 e0       	ldi	r31, 0x00	; 0
 72c:	8a 81       	ldd	r24, Y+2	; 0x02
 72e:	80 83       	st	Z, r24
		break;
	}

}
 730:	0f 90       	pop	r0
 732:	0f 90       	pop	r0
 734:	0f 90       	pop	r0
 736:	0f 90       	pop	r0
 738:	cf 91       	pop	r28
 73a:	df 91       	pop	r29
 73c:	08 95       	ret

0000073e <MDIO_vSetPortVal>:
void MDIO_vSetPortVal(u8 A_u8PortNo , u8 A_u8val)
{
 73e:	df 93       	push	r29
 740:	cf 93       	push	r28
 742:	00 d0       	rcall	.+0      	; 0x744 <MDIO_vSetPortVal+0x6>
 744:	00 d0       	rcall	.+0      	; 0x746 <MDIO_vSetPortVal+0x8>
 746:	cd b7       	in	r28, 0x3d	; 61
 748:	de b7       	in	r29, 0x3e	; 62
 74a:	89 83       	std	Y+1, r24	; 0x01
 74c:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_u8PortNo)
 74e:	89 81       	ldd	r24, Y+1	; 0x01
 750:	28 2f       	mov	r18, r24
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	3c 83       	std	Y+4, r19	; 0x04
 756:	2b 83       	std	Y+3, r18	; 0x03
 758:	8b 81       	ldd	r24, Y+3	; 0x03
 75a:	9c 81       	ldd	r25, Y+4	; 0x04
 75c:	81 30       	cpi	r24, 0x01	; 1
 75e:	91 05       	cpc	r25, r1
 760:	d1 f0       	breq	.+52     	; 0x796 <MDIO_vSetPortVal+0x58>
 762:	2b 81       	ldd	r18, Y+3	; 0x03
 764:	3c 81       	ldd	r19, Y+4	; 0x04
 766:	22 30       	cpi	r18, 0x02	; 2
 768:	31 05       	cpc	r19, r1
 76a:	2c f4       	brge	.+10     	; 0x776 <MDIO_vSetPortVal+0x38>
 76c:	8b 81       	ldd	r24, Y+3	; 0x03
 76e:	9c 81       	ldd	r25, Y+4	; 0x04
 770:	00 97       	sbiw	r24, 0x00	; 0
 772:	61 f0       	breq	.+24     	; 0x78c <MDIO_vSetPortVal+0x4e>
 774:	1e c0       	rjmp	.+60     	; 0x7b2 <MDIO_vSetPortVal+0x74>
 776:	2b 81       	ldd	r18, Y+3	; 0x03
 778:	3c 81       	ldd	r19, Y+4	; 0x04
 77a:	22 30       	cpi	r18, 0x02	; 2
 77c:	31 05       	cpc	r19, r1
 77e:	81 f0       	breq	.+32     	; 0x7a0 <MDIO_vSetPortVal+0x62>
 780:	8b 81       	ldd	r24, Y+3	; 0x03
 782:	9c 81       	ldd	r25, Y+4	; 0x04
 784:	83 30       	cpi	r24, 0x03	; 3
 786:	91 05       	cpc	r25, r1
 788:	81 f0       	breq	.+32     	; 0x7aa <MDIO_vSetPortVal+0x6c>
 78a:	13 c0       	rjmp	.+38     	; 0x7b2 <MDIO_vSetPortVal+0x74>
	{
	case DIO_PORTA :
		PORTA=  A_u8val;
 78c:	eb e3       	ldi	r30, 0x3B	; 59
 78e:	f0 e0       	ldi	r31, 0x00	; 0
 790:	8a 81       	ldd	r24, Y+2	; 0x02
 792:	80 83       	st	Z, r24
 794:	0e c0       	rjmp	.+28     	; 0x7b2 <MDIO_vSetPortVal+0x74>
		break;
	case DIO_PORTB :
		PORTB = A_u8val;
 796:	e8 e3       	ldi	r30, 0x38	; 56
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	8a 81       	ldd	r24, Y+2	; 0x02
 79c:	80 83       	st	Z, r24
 79e:	09 c0       	rjmp	.+18     	; 0x7b2 <MDIO_vSetPortVal+0x74>
		break;
	case DIO_PORTC:
		PORTC = A_u8val ;
 7a0:	e5 e3       	ldi	r30, 0x35	; 53
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	8a 81       	ldd	r24, Y+2	; 0x02
 7a6:	80 83       	st	Z, r24
 7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <MDIO_vSetPortVal+0x74>
		break;
	case DIO_PORTD :
		PORTD = A_u8val ;
 7aa:	e2 e3       	ldi	r30, 0x32	; 50
 7ac:	f0 e0       	ldi	r31, 0x00	; 0
 7ae:	8a 81       	ldd	r24, Y+2	; 0x02
 7b0:	80 83       	st	Z, r24
		break;
	}

}
 7b2:	0f 90       	pop	r0
 7b4:	0f 90       	pop	r0
 7b6:	0f 90       	pop	r0
 7b8:	0f 90       	pop	r0
 7ba:	cf 91       	pop	r28
 7bc:	df 91       	pop	r29
 7be:	08 95       	ret

000007c0 <MDIO_u8GetPortVal>:

u8 MDIO_u8GetPortVal(u8 A_u8PortNo)
{
 7c0:	df 93       	push	r29
 7c2:	cf 93       	push	r28
 7c4:	00 d0       	rcall	.+0      	; 0x7c6 <MDIO_u8GetPortVal+0x6>
 7c6:	00 d0       	rcall	.+0      	; 0x7c8 <MDIO_u8GetPortVal+0x8>
 7c8:	cd b7       	in	r28, 0x3d	; 61
 7ca:	de b7       	in	r29, 0x3e	; 62
 7cc:	8a 83       	std	Y+2, r24	; 0x02

	u8 L_PortVal = 0 ;
 7ce:	19 82       	std	Y+1, r1	; 0x01

	switch(A_u8PortNo)
 7d0:	8a 81       	ldd	r24, Y+2	; 0x02
 7d2:	28 2f       	mov	r18, r24
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	3c 83       	std	Y+4, r19	; 0x04
 7d8:	2b 83       	std	Y+3, r18	; 0x03
 7da:	8b 81       	ldd	r24, Y+3	; 0x03
 7dc:	9c 81       	ldd	r25, Y+4	; 0x04
 7de:	81 30       	cpi	r24, 0x01	; 1
 7e0:	91 05       	cpc	r25, r1
 7e2:	d1 f0       	breq	.+52     	; 0x818 <MDIO_u8GetPortVal+0x58>
 7e4:	2b 81       	ldd	r18, Y+3	; 0x03
 7e6:	3c 81       	ldd	r19, Y+4	; 0x04
 7e8:	22 30       	cpi	r18, 0x02	; 2
 7ea:	31 05       	cpc	r19, r1
 7ec:	2c f4       	brge	.+10     	; 0x7f8 <MDIO_u8GetPortVal+0x38>
 7ee:	8b 81       	ldd	r24, Y+3	; 0x03
 7f0:	9c 81       	ldd	r25, Y+4	; 0x04
 7f2:	00 97       	sbiw	r24, 0x00	; 0
 7f4:	61 f0       	breq	.+24     	; 0x80e <MDIO_u8GetPortVal+0x4e>
 7f6:	1e c0       	rjmp	.+60     	; 0x834 <MDIO_u8GetPortVal+0x74>
 7f8:	2b 81       	ldd	r18, Y+3	; 0x03
 7fa:	3c 81       	ldd	r19, Y+4	; 0x04
 7fc:	22 30       	cpi	r18, 0x02	; 2
 7fe:	31 05       	cpc	r19, r1
 800:	81 f0       	breq	.+32     	; 0x822 <MDIO_u8GetPortVal+0x62>
 802:	8b 81       	ldd	r24, Y+3	; 0x03
 804:	9c 81       	ldd	r25, Y+4	; 0x04
 806:	83 30       	cpi	r24, 0x03	; 3
 808:	91 05       	cpc	r25, r1
 80a:	81 f0       	breq	.+32     	; 0x82c <MDIO_u8GetPortVal+0x6c>
 80c:	13 c0       	rjmp	.+38     	; 0x834 <MDIO_u8GetPortVal+0x74>
	{
	case DIO_PORTA :
		L_PortVal = PORTA ;
 80e:	eb e3       	ldi	r30, 0x3B	; 59
 810:	f0 e0       	ldi	r31, 0x00	; 0
 812:	80 81       	ld	r24, Z
 814:	89 83       	std	Y+1, r24	; 0x01
 816:	0e c0       	rjmp	.+28     	; 0x834 <MDIO_u8GetPortVal+0x74>
		break;
	case DIO_PORTB :
		L_PortVal = PORTB ;
 818:	e8 e3       	ldi	r30, 0x38	; 56
 81a:	f0 e0       	ldi	r31, 0x00	; 0
 81c:	80 81       	ld	r24, Z
 81e:	89 83       	std	Y+1, r24	; 0x01
 820:	09 c0       	rjmp	.+18     	; 0x834 <MDIO_u8GetPortVal+0x74>
		break;
	case DIO_PORTC:
		L_PortVal = PORTC ;
 822:	e5 e3       	ldi	r30, 0x35	; 53
 824:	f0 e0       	ldi	r31, 0x00	; 0
 826:	80 81       	ld	r24, Z
 828:	89 83       	std	Y+1, r24	; 0x01
 82a:	04 c0       	rjmp	.+8      	; 0x834 <MDIO_u8GetPortVal+0x74>
		break;
	case DIO_PORTD :
		L_PortVal = PORTD ;
 82c:	e2 e3       	ldi	r30, 0x32	; 50
 82e:	f0 e0       	ldi	r31, 0x00	; 0
 830:	80 81       	ld	r24, Z
 832:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return L_PortVal ;
 834:	89 81       	ldd	r24, Y+1	; 0x01
}
 836:	0f 90       	pop	r0
 838:	0f 90       	pop	r0
 83a:	0f 90       	pop	r0
 83c:	0f 90       	pop	r0
 83e:	cf 91       	pop	r28
 840:	df 91       	pop	r29
 842:	08 95       	ret

00000844 <__vector_1>:
#include <avr/io.h>
#include <avr/interrupt.h>


ISR(INT0_vect)
{
 844:	1f 92       	push	r1
 846:	0f 92       	push	r0
 848:	0f b6       	in	r0, 0x3f	; 63
 84a:	0f 92       	push	r0
 84c:	11 24       	eor	r1, r1
 84e:	2f 93       	push	r18
 850:	3f 93       	push	r19
 852:	4f 93       	push	r20
 854:	5f 93       	push	r21
 856:	6f 93       	push	r22
 858:	7f 93       	push	r23
 85a:	8f 93       	push	r24
 85c:	9f 93       	push	r25
 85e:	af 93       	push	r26
 860:	bf 93       	push	r27
 862:	ef 93       	push	r30
 864:	ff 93       	push	r31
 866:	df 93       	push	r29
 868:	cf 93       	push	r28
 86a:	cd b7       	in	r28, 0x3d	; 61
 86c:	de b7       	in	r29, 0x3e	; 62
MDIO_vTogPinVal(DIO_PORTA,DIO_PIN0);
 86e:	80 e0       	ldi	r24, 0x00	; 0
 870:	60 e0       	ldi	r22, 0x00	; 0
 872:	0e 94 67 02 	call	0x4ce	; 0x4ce <MDIO_vTogPinVal>
}
 876:	cf 91       	pop	r28
 878:	df 91       	pop	r29
 87a:	ff 91       	pop	r31
 87c:	ef 91       	pop	r30
 87e:	bf 91       	pop	r27
 880:	af 91       	pop	r26
 882:	9f 91       	pop	r25
 884:	8f 91       	pop	r24
 886:	7f 91       	pop	r23
 888:	6f 91       	pop	r22
 88a:	5f 91       	pop	r21
 88c:	4f 91       	pop	r20
 88e:	3f 91       	pop	r19
 890:	2f 91       	pop	r18
 892:	0f 90       	pop	r0
 894:	0f be       	out	0x3f, r0	; 63
 896:	0f 90       	pop	r0
 898:	1f 90       	pop	r1
 89a:	18 95       	reti

0000089c <main>:

int main(void)
{
 89c:	df 93       	push	r29
 89e:	cf 93       	push	r28
 8a0:	cd b7       	in	r28, 0x3d	; 61
 8a2:	de b7       	in	r29, 0x3e	; 62

	MDIO_vSetPinDir(DIO_PORTD,DIO_PIN2,DIO_INPUT);
 8a4:	83 e0       	ldi	r24, 0x03	; 3
 8a6:	62 e0       	ldi	r22, 0x02	; 2
 8a8:	40 e0       	ldi	r20, 0x00	; 0
 8aa:	0e 94 67 00 	call	0xce	; 0xce <MDIO_vSetPinDir>
	MDIO_vSetPinDir(DIO_PORTA,DIO_PIN0,DIO_OUTPUT);
 8ae:	80 e0       	ldi	r24, 0x00	; 0
 8b0:	60 e0       	ldi	r22, 0x00	; 0
 8b2:	41 e0       	ldi	r20, 0x01	; 1
 8b4:	0e 94 67 00 	call	0xce	; 0xce <MDIO_vSetPinDir>
	MDIO_vSetPinVal(DIO_PORTD,DIO_PIN2,DIO_HIGH);
 8b8:	83 e0       	ldi	r24, 0x03	; 3
 8ba:	62 e0       	ldi	r22, 0x02	; 2
 8bc:	41 e0       	ldi	r20, 0x01	; 1
 8be:	0e 94 67 01 	call	0x2ce	; 0x2ce <MDIO_vSetPinVal>
	MEXTI_vInit();
 8c2:	0e 94 52 00 	call	0xa4	; 0xa4 <MEXTI_vInit>
	MGIE_vEnableGlobalInterrupt();
 8c6:	0e 94 36 00 	call	0x6c	; 0x6c <MGIE_vEnableGlobalInterrupt>
 8ca:	ff cf       	rjmp	.-2      	; 0x8ca <main+0x2e>

000008cc <_exit>:
 8cc:	f8 94       	cli

000008ce <__stop_program>:
 8ce:	ff cf       	rjmp	.-2      	; 0x8ce <__stop_program>
