Archive member included because of file (symbol)

d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./HAL/STEPER-MOTOR/STM-pro.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/DIO/DIO_pro.o
LOAD ./HAL/STEPER-MOTOR/STM-pro.o
LOAD ./HAL/DC-MOTOR/DCM-pro.o
LOAD ./APP/main.o
LOAD d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x480
 *(.vectors)
 .vectors       0x00000000       0x54 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000076        0x8 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000007e        0x4 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000007e                __vector_1
                0x0000007e                __vector_12
                0x0000007e                __bad_interrupt
                0x0000007e                __vector_6
                0x0000007e                __vector_3
                0x0000007e                __vector_11
                0x0000007e                __vector_13
                0x0000007e                __vector_17
                0x0000007e                __vector_19
                0x0000007e                __vector_7
                0x0000007e                __vector_5
                0x0000007e                __vector_4
                0x0000007e                __vector_9
                0x0000007e                __vector_2
                0x0000007e                __vector_15
                0x0000007e                __vector_8
                0x0000007e                __vector_14
                0x0000007e                __vector_10
                0x0000007e                __vector_16
                0x0000007e                __vector_18
                0x0000007e                __vector_20
 .text          0x00000082        0x0 ./MCAL/DIO/DIO_pro.o
 .text          0x00000082        0x0 ./HAL/STEPER-MOTOR/STM-pro.o
 .text          0x00000082        0x0 ./HAL/DC-MOTOR/DCM-pro.o
 .text          0x00000082        0x0 ./APP/main.o
 .text          0x00000082        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000082        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000082                . = ALIGN (0x2)
 *(.text.*)
 .text.MDIO_vSetPinDir
                0x00000082       0xe6 ./MCAL/DIO/DIO_pro.o
                0x00000082                MDIO_vSetPinDir
 .text.MDIO_vSetPinVal
                0x00000168       0xe6 ./MCAL/DIO/DIO_pro.o
                0x00000168                MDIO_vSetPinVal
 .text.MDIO_u8GetPinVal
                0x0000024e       0x40 ./MCAL/DIO/DIO_pro.o
                0x0000024e                MDIO_u8GetPinVal
 .text.MDIO_vSetPortDir
                0x0000028e       0x22 ./MCAL/DIO/DIO_pro.o
                0x0000028e                MDIO_vSetPortDir
 .text.MDIO_vSetPortVal
                0x000002b0       0x22 ./MCAL/DIO/DIO_pro.o
                0x000002b0                MDIO_vSetPortVal
 .text.MDIO_u8GetPortVal
                0x000002d2       0x24 ./MCAL/DIO/DIO_pro.o
                0x000002d2                MDIO_u8GetPortVal
 .text.HSTPR_vRotateCW
                0x000002f6        0x2 ./HAL/STEPER-MOTOR/STM-pro.o
                0x000002f6                HSTPR_vRotateCW
 .text.HSTPR_vRotateCCW
                0x000002f8        0x2 ./HAL/STEPER-MOTOR/STM-pro.o
                0x000002f8                HSTPR_vRotateCCW
 .text.HSTPR_vRotateStepsCCW
                0x000002fa       0x5a ./HAL/STEPER-MOTOR/STM-pro.o
                0x000002fa                HSTPR_vRotateStepsCCW
 .text.HSTPR_vRotateStepsCW
                0x00000354       0x5c ./HAL/STEPER-MOTOR/STM-pro.o
                0x00000354                HSTPR_vRotateStepsCW
 .text.HSTPR_vInit
                0x000003b0        0xa ./HAL/STEPER-MOTOR/STM-pro.o
                0x000003b0                HSTPR_vInit
 .text.HDCM_vStop
                0x000003ba       0x16 ./HAL/DC-MOTOR/DCM-pro.o
                0x000003ba                HDCM_vStop
 .text.HDCM_vRotateCCW
                0x000003d0       0x16 ./HAL/DC-MOTOR/DCM-pro.o
                0x000003d0                HDCM_vRotateCCW
 .text.HDCM_vRotateCW
                0x000003e6       0x16 ./HAL/DC-MOTOR/DCM-pro.o
                0x000003e6                HDCM_vRotateCW
 .text.HDCM_vInit
                0x000003fc       0x16 ./HAL/DC-MOTOR/DCM-pro.o
                0x000003fc                HDCM_vInit
 .text.main     0x00000412       0x6a ./APP/main.o
                0x00000412                main
 .text.libgcc   0x0000047c        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000047c        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x0000047c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000047c        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000047c                exit
                0x0000047c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000047c        0x4 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000480                _etext = .

.data           0x00800060       0x10 load address 0x00000480
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/DIO/DIO_pro.o
 .data          0x00800060        0x0 ./HAL/STEPER-MOTOR/STM-pro.o
 .data          0x00800060        0x0 ./HAL/DC-MOTOR/DCM-pro.o
 .data          0x00800060        0x0 ./APP/main.o
 .data          0x00800060        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.data*)
 .data.L_u8Steps
                0x00800060        0x8 ./HAL/STEPER-MOTOR/STM-pro.o
                0x00800060                L_u8Steps
 *(.rodata)
 *(.rodata*)
 .rodata.C.0.1275
                0x00800068        0x8 ./APP/main.o
 *(.gnu.linkonce.d*)
                0x00800070                . = ALIGN (0x2)
                0x00800070                _edata = .
                0x00800070                PROVIDE (__data_end, .)

.bss            0x00800070        0x0
                0x00800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800070        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800070        0x0 ./MCAL/DIO/DIO_pro.o
 .bss           0x00800070        0x0 ./HAL/STEPER-MOTOR/STM-pro.o
 .bss           0x00800070        0x0 ./HAL/DC-MOTOR/DCM-pro.o
 .bss           0x00800070        0x0 ./APP/main.o
 .bss           0x00800070        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800070        0x0 d:/emcaddad imt/01- tools/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x00800070                PROVIDE (__bss_end, .)
                0x00000480                __data_load_start = LOADADDR (.data)
                0x00000490                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800070        0x0
                0x00800070                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800070                PROVIDE (__noinit_end, .)
                0x00800070                _end = .
                0x00800070                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(05-MOTOR.elf elf32-avr)
LOAD linker stubs
